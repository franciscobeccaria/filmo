[{"C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\App.js":"1","C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\index.js":"2","C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\MovieCard.jsx":"3","C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\MovieSlider.jsx":"4","C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\Header.jsx":"5","C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\SearchResult.jsx":"6","C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\SearchBox.jsx":"7","C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\Searchbox.jsx":"8","C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\StyledButton.jsx":"9","C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\Main.jsx":"10","C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\MoviePage.jsx":"11","C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\ListCheckbox.jsx":"12","C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\TVPage.jsx":"13","C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\ToastMessage.jsx":"14","C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\redux\\store.js":"15","C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\redux\\actionCreators.js":"16","C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\redux\\actions.js":"17"},{"size":1153,"mtime":1611356101815,"results":"18","hashOfConfig":"19"},{"size":168,"mtime":1611252438679,"results":"20","hashOfConfig":"19"},{"size":2045,"mtime":1611171234288,"results":"21","hashOfConfig":"19"},{"size":2829,"mtime":1611255034387,"results":"22","hashOfConfig":"19"},{"size":2358,"mtime":1611249271531,"results":"23","hashOfConfig":"19"},{"size":668,"mtime":1610764684917,"results":"24","hashOfConfig":"19"},{"size":7425,"mtime":1611076754146,"results":"25","hashOfConfig":"19"},{"size":8587,"mtime":1611185770188,"results":"26","hashOfConfig":"19"},{"size":1904,"mtime":1611197260981,"results":"27","hashOfConfig":"19"},{"size":743,"mtime":1611288661818,"results":"28","hashOfConfig":"19"},{"size":6404,"mtime":1611440458119,"results":"29","hashOfConfig":"19"},{"size":6441,"mtime":1611439692951,"results":"30","hashOfConfig":"19"},{"size":5342,"mtime":1611202139853,"results":"31","hashOfConfig":"19"},{"size":2488,"mtime":1611439477624,"results":"32","hashOfConfig":"19"},{"size":435,"mtime":1611435026621,"results":"33","hashOfConfig":"19"},{"size":189,"mtime":1611435022931,"results":"34","hashOfConfig":"19"},{"size":57,"mtime":1611435005901,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ltit9f",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\App.js",[],"C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\index.js",[],["76","77"],"C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\MovieCard.jsx",[],["78","79"],"C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\MovieSlider.jsx",["80"],"import React, {useState, useEffect} from 'react'\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\n\r\nimport firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\nimport MovieCard from './MovieCard'\r\n\r\nconst Slider = styled.div`\r\n    display: flex;\r\n    overflow-x: auto;\r\n    overflow-y: hidden;\r\n    margin: 0 50px;\r\n    @media screen and (max-width: 640px) {\r\n        margin: 0 20px;\r\n  }\r\n    &::-webkit-scrollbar-track {\r\n        box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n        -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n        border-radius: 10px;\r\n        background-color: #f5f5f5;\r\n    }\r\n\r\n    &::-webkit-scrollbar {\r\n        width: 6px;\r\n        height: 6px;\r\n        background-color: transparent;\r\n        float: top;\r\n    }\r\n\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 10px;\r\n        box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n        -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n        background-color: #555;\r\n    }\r\n`\r\nconst Title = styled.h4`\r\n    text-align: center;\r\n    padding: 0.5rem 0.5rem 0.5rem 0.5rem;\r\n    color: white;\r\n    font-family: var(--racing-sans-one-family);\r\n    font-size: 3rem;\r\n    @media screen and (max-width: 640px) {\r\n        font-size: 2.5rem;\r\n  }\r\n`\r\n\r\nconst MovieSlider = ({title, children, mediaType, firebaseDocId}) => {\r\n    const [state, setState] = useState([])\r\n\r\n    useEffect(() => {\r\n        if(firebaseDocId) { \r\n            firebase.firestore().collection('users').doc('GH6s3ts7FfoKNv2o2qUi').collection('lists').doc(`${firebaseDocId}`)\r\n            .onSnapshot(function(doc) {\r\n                console.log(\"Current data: \", doc.data().list);\r\n                setState(doc.data().list)\r\n            })\r\n        } else { \r\n            axios.get(`https://api.themoviedb.org/3/trending/${mediaType}/week?api_key=81d1f6291941e4cbb7818fa6c6be6f85`)\r\n            .then(resp => setState(resp.data.results))\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Title>\r\n                    {`${title} >`}\r\n                </Title>\r\n            </div>\r\n            <Slider>\r\n                {children}\r\n                {state.map(e => \r\n                    <MovieCard \r\n                        movieTitle={mediaType === 'movie' ? e.title : e.name} \r\n                        movieSrc={e.poster_path} \r\n                        movieYear={mediaType === 'movie' ? e.release_date.slice(0, 4) : e.first_air_date.slice(0, 4)}\r\n                        link={mediaType === 'movie' ? `/movie/${e.id}` : `/tv/${e.id}`}\r\n                        key={e.id} // En un futuro cambiarlo, porque puede haber la posibilidad de que los ID de movie y tv se repitan. \r\n                    />\r\n                )}\r\n            </Slider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieSlider","C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\Header.jsx",[],"C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\SearchResult.jsx",[],["81","82"],"C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\SearchBox.jsx",["83"],"C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\Searchbox.jsx",[],"C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\StyledButton.jsx",[],"C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\Main.jsx",[],"C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\MoviePage.jsx",["84"],"C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\ListCheckbox.jsx",["85"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport { showToastMessage } from './redux/actionCreators';\r\nimport {connect} from 'react-redux'\r\n\r\nconst Wrapper = styled.div`\r\n    min-width: 50px;\r\n    min-height: 50px;\r\n    background: transparent;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: white;\r\n    cursor: pointer;\r\n    transition: all 0.4s;\r\n    border-radius: 10px;\r\n    outline: none;\r\n    /* border: 2px solid white; */\r\n\r\n    width: 30%;\r\n\r\n    position: relative;\r\n\r\n    @media screen and (max-width: 640px) {\r\n    width: 100%;\r\n    margin-bottom: 1.5rem;\r\n    }\r\n\r\n    /* &:hover {\r\n        background: #0099ff;\r\n        transition: all .5s;\r\n        border: 2px solid #0099ff;\r\n    } */\r\n\r\n    & input {\r\n        display: none;\r\n    }\r\n\r\n    & label {\r\n        border-radius: 10px;\r\n        width: 100%;\r\n        min-height: 50px;\r\n        cursor: pointer;\r\n        font-family: 'Racing Sans One';\r\n        font-size: 1.75rem;\r\n        cursor: pointer;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        text-align: center;\r\n\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n\r\n        border: 2px solid white;\r\n\r\n        transition: all .5s;\r\n    }\r\n\r\n    & label:hover {\r\n        background: #0099ff;\r\n        transition: all .5s;\r\n        border: 2px solid #0099ff;\r\n    }\r\n\r\n    & input:checked + label {\r\n        background: #0099ff;\r\n        transition: all .5s;\r\n        border: 2px solid #0099ff;\r\n    }\r\n\r\n    & input:checked + label:hover {\r\n        background: transparent;\r\n        transition: all .5s;\r\n        border: 2px solid white;\r\n    }\r\n`\r\n\r\nconst ListCheckbox = ({idFor, children, mediaInfo, exampleFunction}) => {\r\n    const checkbox = useRef(null);\r\n\r\n    const [state, setState] = useState({\r\n        checked: undefined,\r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log('useEffect executed')\r\n        getListListener('returnOnlyId')\r\n        console.log('useEffect', state)\r\n    }, [])\r\n\r\n    function getListListener(returnOnlyId) {\r\n        if(returnOnlyId === 'returnOnlyId') {\r\n            firebase.firestore().collection('users').doc('GH6s3ts7FfoKNv2o2qUi').collection('lists').doc(idFor)\r\n            .onSnapshot(function(doc) {\r\n                let arrayOfId = []\r\n                doc.data().list.forEach(movie => {\r\n                    arrayOfId.push(movie.id)\r\n                })\r\n                setState({\r\n                    ...state,\r\n                    arrayOfId: arrayOfId,\r\n                })\r\n                if(arrayOfId.includes(mediaInfo.id)) {\r\n                    setState({\r\n                        ...state,\r\n                        checked: true,\r\n                    })\r\n                } else {\r\n                    setState({\r\n                        ...state,\r\n                        checked: false,\r\n                    })\r\n                }\r\n            })\r\n        } else {\r\n            firebase.firestore().collection('users').doc('GH6s3ts7FfoKNv2o2qUi').collection('lists').doc(idFor)\r\n            .onSnapshot(function(doc) {\r\n                setState({\r\n                    ...state,\r\n                    arrayOfMovies: doc.data().list,\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    function addMovieToList() {\r\n        let docRef = firebase.firestore().collection('users').doc('GH6s3ts7FfoKNv2o2qUi').collection('lists').doc(idFor)\r\n            docRef.get().then(function (doc) {\r\n                if (doc.exists) {\r\n                  docRef.update({\r\n                    list: firebase.firestore.FieldValue.arrayUnion({\r\n                      title: mediaInfo.title,\r\n                      id: mediaInfo.id,\r\n                      poster: mediaInfo.poster_path,\r\n                      release: mediaInfo.release_date,\r\n                    }),\r\n                  });\r\n                  exampleFunction(`${mediaInfo.title} added to ${children}`)\r\n                } else {\r\n                  console.log(doc.data());\r\n                  console.log('the document not exists.');\r\n                }\r\n              })\r\n              .catch(function (error) {\r\n                console.log('Error getting document:', error);\r\n              });\r\n    }\r\n\r\n    function removeMovieFromList() {\r\n        let docRef = firebase.firestore().collection('users').doc('GH6s3ts7FfoKNv2o2qUi').collection('lists').doc(idFor)\r\n            docRef.get().then(function (doc) {\r\n                if (doc.exists) {\r\n                  docRef.update({\r\n                    list: firebase.firestore.FieldValue.arrayRemove({\r\n                      title: mediaInfo.title,\r\n                      id: mediaInfo.id,\r\n                      poster: mediaInfo.poster_path,\r\n                      release: mediaInfo.release_date,\r\n                    }),\r\n                  });\r\n                  exampleFunction(`${mediaInfo.title} removed from ${children}`)\r\n                } else {\r\n                  console.log(doc.data());\r\n                  console.log('the document not exists.');\r\n                }\r\n              })\r\n              .catch(function (error) {\r\n                console.log('Error getting document:', error);\r\n              });\r\n    }\r\n\r\n    if(state.checked === undefined) {\r\n        return (\r\n            <Wrapper>\r\n                <input ref={checkbox} type=\"checkbox\" id={idFor}/>\r\n                <label >Cargando...</label>\r\n            </Wrapper>\r\n        )\r\n    } else if (state.checked === true) {\r\n        return (\r\n            <Wrapper>\r\n                <input defaultChecked={true} ref={checkbox} type=\"checkbox\" /* id={idFor} *//>\r\n                <label htmlFor={idFor} onClick={() => removeMovieFromList()}>{children}</label>\r\n            </Wrapper>\r\n        ) \r\n    } else if (state.checked === false) {\r\n        return (\r\n            <Wrapper>\r\n                <input defaultChecked={false} ref={checkbox} type=\"checkbox\" /* id={idFor} *//>\r\n                <label htmlFor={idFor} onClick={() => addMovieToList()}>{children}</label>\r\n            </Wrapper>\r\n        ) \r\n    }\r\n}\r\n\r\nconst mapStateToProps = () => ({})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    exampleFunction(text) {\r\n        dispatch(showToastMessage(text))\r\n    }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListCheckbox)","C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\TVPage.jsx",["86"],"import React, {useState, useEffect} from 'react'\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\n\r\nimport StyledButton from './StyledButton'\r\nimport ListCheckbox from './ListCheckbox'\r\n\r\nconst Wrapper = styled.main`\r\n    background: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(4,4,56,1) 50%, rgba(0,117,140,1) 100%);\r\n`\r\n\r\nconst MovieContainer = styled.div`\r\n    padding: 5rem 10rem 5rem 10rem;\r\n    display: flex;\r\n    width: 100%; \r\n    @media screen and (max-width: 1024px) {\r\n        flex-wrap: wrap;\r\n        display: flex;\r\n        justify-content: center;  \r\n    }\r\n    @media screen and (max-width: 770px) {   \r\n        padding: 5rem 5rem 5rem 5rem; } \r\n    @media screen and (max-width: 640px) {\r\n        padding: 3rem 3rem 3rem 3rem; } \r\n    @media screen and (max-width: 640px) {\r\n        padding: 3rem 2rem 0rem 2rem; } \r\n`\r\n\r\nconst MoviePoster = styled.div`\r\n        width: 30%; \r\n        @media screen and (max-width: 1024px) {\r\n            height: 30rem;\r\n            width: 20rem; \r\n        }\r\n        & > img {\r\n            height: 100%;\r\n            width: 100%;\r\n            object-fit: cover;\r\n        }\r\n`\r\n\r\nconst MovieInfo = styled.div`\r\n        padding: 3rem;\r\n        width: 70%; \r\n        @media screen and (max-width: 1024px) {\r\n            width: 100%; }\r\n        & .movie-info-1 {\r\n            @media screen and (max-width: 1024px) {\r\n                    width: 100%;\r\n                    display: flex;\r\n                    justify-content: center; }\r\n            & h1 {\r\n                    color: #f0f0f0;\r\n                    font-family: \"Roboto\", Arial, Helvetica, sans-serif;\r\n                    font-size: 5rem;\r\n                    margin-bottom: 2rem; \r\n                    @media screen and (max-width: 1024px) {\r\n                        font-size: 4rem;\r\n                        margin-bottom: 1.5rem; }\r\n                    @media screen and (max-width: 640px) {\r\n                        font-size: 3rem; } \r\n            }\r\n        }\r\n        & .movie-info-2 {\r\n            width: 100%;\r\n            display: flex;\r\n            flex-wrap: wrap;\r\n            justify-content: space-between;\r\n            align-items: center;\r\n            margin-bottom: 2rem; }\r\n            @media screen and (max-width: 1024px) {\r\n                width: 100%;\r\n                display: flex;\r\n                flex-wrap: wrap;\r\n                justify-content: center; \r\n        }\r\n        & .movie-info-3 {\r\n            width: 100%;\r\n            display: flex;\r\n            flex-wrap: wrap;\r\n            margin-bottom: 2rem;\r\n            & span {\r\n                color: #f0f0f0;\r\n                margin-right: 2rem;\r\n                font-size: 1.5rem;\r\n                font-family: \"Roboto\", Arial, Helvetica, sans-serif; \r\n                @media screen and (max-width: 640px) {\r\n                    font-size: 1.25rem; }\r\n            }\r\n        }\r\n        & .movie-info-4 {\r\n            width: 100%;\r\n                font-size: 2rem;\r\n                color: #f0f0f0;\r\n                font-family: \"Roboto\", Arial, Helvetica, sans-serif;\r\n                font-weight: 700;\r\n                margin-bottom: 1rem; \r\n                @media screen and (max-width: 640px) {\r\n                    font-size: 1.5rem; }\r\n        } \r\n        & .movie-info-5 {\r\n            width: 100%;\r\n                font-size: 1.5rem;\r\n                color: #f0f0f0;\r\n                font-family: \"Roboto\", Arial, Helvetica, sans-serif; \r\n                @media screen and (max-width: 640px) {\r\n                    font-size: 1.25rem; } \r\n        }\r\n`\r\n\r\nconst TVPage = ({match}) => {\r\n    const [state, setState] = useState({})\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://api.themoviedb.org/3/tv/${match.params.id}?api_key=81d1f6291941e4cbb7818fa6c6be6f85&language=en-US`)\r\n        .then(resp => setState(resp.data))\r\n    }, [])\r\n\r\n    return (\r\n        <Wrapper>\r\n            <MovieContainer>\r\n                <MoviePoster>\r\n                    <img src={`https://image.tmdb.org/t/p/original/${state.poster_path}`} alt={state.name}/>\r\n                </MoviePoster>\r\n                <MovieInfo>\r\n                    <div className=\"movie-info-1\">\r\n                        <h1>{state.name}</h1>\r\n                    </div>\r\n                    <div className=\"movie-info-2\">\r\n                        <ListCheckbox idFor=\"want-to-see\">Want-To-See</ListCheckbox>\r\n                        <ListCheckbox idFor=\"seen-it\">Seen-It</ListCheckbox>\r\n                        <StyledButton inMoviePage><p>All My Lists</p></StyledButton>\r\n                    </div>\r\n                    <div className=\"movie-info-3\">\r\n                        <span>{state.vote_average * 10}%</span>\r\n                        <span>{state.genres === undefined ? '' : `${state.genres[0].name} - ${state.genres[1].name}`}</span>\r\n                        <span>{state.first_air_date}</span>\r\n                        <span>{state.episode_run_time === undefined ? '' : state.episode_run_time[0]} min per Episode</span>\r\n                    </div>\r\n                    <div className=\"movie-info-4\"><p>Overview</p></div>\r\n                    <div className=\"movie-info-5\"><p>{state.overview}</p></div>\r\n                </MovieInfo>\r\n            </MovieContainer>\r\n            <div></div>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default TVPage","C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\ToastMessage.jsx",[],"C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\redux\\store.js",[],"C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\redux\\actionCreators.js",[],"C:\\Users\\fbecc\\Documents\\react-projects\\movies-project\\src\\redux\\actions.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"87","replacedBy":"91"},{"ruleId":"89","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":76,"column":8,"nodeType":"95","endLine":76,"endColumn":10,"suggestions":"96"},{"ruleId":"87","replacedBy":"97"},{"ruleId":"89","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":7,"column":7,"nodeType":"101","messageId":"102","endLine":7,"endColumn":28},{"ruleId":"93","severity":1,"message":"103","line":125,"column":8,"nodeType":"95","endLine":125,"endColumn":10,"suggestions":"104"},{"ruleId":"93","severity":1,"message":"105","line":94,"column":8,"nodeType":"95","endLine":94,"endColumn":10,"suggestions":"106"},{"ruleId":"93","severity":1,"message":"103","line":117,"column":8,"nodeType":"95","endLine":117,"endColumn":10,"suggestions":"107"},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],["108"],["109"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'firebaseDocId' and 'mediaType'. Either include them or remove the dependency array.","ArrayExpression",["110"],["108"],["109"],"no-unused-vars","'SEARCH_BOX_OPEN_WIDTH' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["111"],"React Hook useEffect has missing dependencies: 'getListListener' and 'state'. Either include them or remove the dependency array.",["112"],["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"116","fix":"120"},"Update the dependencies array to be: [firebaseDocId, mediaType]",{"range":"121","text":"122"},"Update the dependencies array to be: [match.params.id]",{"range":"123","text":"124"},"Update the dependencies array to be: [getListListener, state]",{"range":"125","text":"126"},{"range":"127","text":"124"},[2421,2423],"[firebaseDocId, mediaType]",[4265,4267],"[match.params.id]",[2148,2150],"[getListListener, state]",[3862,3864]]